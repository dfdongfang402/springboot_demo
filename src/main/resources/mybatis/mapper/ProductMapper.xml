<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.dao.ProductMapper">
  <resultMap id="BaseResultMap" type="com.example.model.Product">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="playerId" jdbcType="BIGINT" property="playerId" />
    <result column="buildingId" jdbcType="BIGINT" property="buildingId" />
    <result column="productType" jdbcType="INTEGER" property="productType" />
    <result column="index" jdbcType="INTEGER" property="index" />
    <result column="state" jdbcType="TINYINT" property="state" />
    <result column="finishedTime" jdbcType="BIGINT" property="finishedTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, playerId, buildingId, productType, index, state, finishedTime
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from product
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from product
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.example.model.Product">
    insert into product (id, playerId, buildingId, 
      productType, index, state, 
      finishedTime)
    values (#{id,jdbcType=BIGINT}, #{playerId,jdbcType=BIGINT}, #{buildingId,jdbcType=BIGINT}, 
      #{productType,jdbcType=INTEGER}, #{index,jdbcType=INTEGER}, #{state,jdbcType=TINYINT}, 
      #{finishedTime,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.example.model.Product">
    insert into product
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="playerId != null">
        playerId,
      </if>
      <if test="buildingId != null">
        buildingId,
      </if>
      <if test="productType != null">
        productType,
      </if>
      <if test="index != null">
        index,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="finishedTime != null">
        finishedTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="playerId != null">
        #{playerId,jdbcType=BIGINT},
      </if>
      <if test="buildingId != null">
        #{buildingId,jdbcType=BIGINT},
      </if>
      <if test="productType != null">
        #{productType,jdbcType=INTEGER},
      </if>
      <if test="index != null">
        #{index,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        #{state,jdbcType=TINYINT},
      </if>
      <if test="finishedTime != null">
        #{finishedTime,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.model.Product">
    update product
    <set>
      <if test="playerId != null">
        playerId = #{playerId,jdbcType=BIGINT},
      </if>
      <if test="buildingId != null">
        buildingId = #{buildingId,jdbcType=BIGINT},
      </if>
      <if test="productType != null">
        productType = #{productType,jdbcType=INTEGER},
      </if>
      <if test="index != null">
        index = #{index,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=TINYINT},
      </if>
      <if test="finishedTime != null">
        finishedTime = #{finishedTime,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.model.Product">
    update product
    set playerId = #{playerId,jdbcType=BIGINT},
      buildingId = #{buildingId,jdbcType=BIGINT},
      productType = #{productType,jdbcType=INTEGER},
      index = #{index,jdbcType=INTEGER},
      state = #{state,jdbcType=TINYINT},
      finishedTime = #{finishedTime,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>